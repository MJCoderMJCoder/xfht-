package com.cxgc.front.model; 
// Generated 2017-8-23 14:27:52 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;

/**
 * Worktime generated by hbm2java
 */

@Entity
@Table(name = "jc_guestbook", catalog = "mysql")
public class Guestbook implements java.io.Serializable {

	private Integer id;
	private Integer siteId=1;
	private Integer ctgId;//类别：1、网上信访2、来访登记3、来信登记4、上级交办
	private String ip;//ip地址
	private String complaintNumber;//信访单号
	private Date createTime;//创建时间
	private Date replayTime;//回复时间
	private Boolean checked;//是否审批
	private Boolean recommend;//是否推荐
	private User createUser;//录入人
	private Integer status;//状态:0、删除 1、草稿 2、提交审核 3、通过 4、驳回给录入人员 5、不予受理/不再受理 6、转办/交办 7、上报 8、口头回复/书面回复 9、完结 10、处理中
	private Integer peopleCount;//来访人数、来信人数
	private String leader;//来访代表、来信代表
	private String receptionist;//信访接待人
	private String appeals;//反应问题及诉求
	private String preliminaryOpinion;//初步处理意见
	private Boolean satisfied;//是否满意
	private Date endTime;//限定处理截止日期
	private Date completeTime;//事件办结时间
	
	private GuestbookExt ext;//扩展信息
	private List<GuestbookAttr> attachments;
	private List<GuestbookReason> reason;
	
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "guestbook_id", unique = true, nullable = false, length = 10)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "site_id", length = 11,nullable=false)
	public Integer getSiteId() {
		return siteId;
	}

	public void setSiteId(Integer siteId) {
		this.siteId = siteId;
	}

	@Column(name = "guestbookctg_id", length = 11,nullable=false)
	public Integer getCtgId() {
		return ctgId;
	}

	public void setCtgId(Integer ctgId) {
		this.ctgId = ctgId;
	}

	@Column(name = "ip", length = 255)
	public String getIp() {
		return ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@Column(name = "complaintNumber", length = 255)
	public String getComplaintNumber() {
		return complaintNumber;
	}

	public void setComplaintNumber(String complaintNumber) {
		this.complaintNumber = complaintNumber;
	}

	@Column(name = "create_time")
	public Date getCreateTime() {
		return createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "replay_time")
	public Date getReplayTime() {
		return replayTime;
	}

	public void setReplayTime(Date replayTime) {
		this.replayTime = replayTime;
	}

	@Column(name = "is_checked")
	public Boolean getChecked() {
		return checked;
	}

	public void setChecked(Boolean checked) {
		this.checked = checked;
	}

	@Column(name = "is_recommend")
	public Boolean getRecommend() {
		return recommend;
	}

	public void setRecommend(Boolean recommend) {
		this.recommend = recommend;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY, targetEntity = User.class)  
	@JoinColumn(name = "user_id")
	public User getCreateUser() {
		return createUser;
	}

	public void setCreateUser(User createUser) {
		this.createUser = createUser;
	}

	@OneToOne(fetch = FetchType.EAGER, targetEntity = GuestbookExt.class)  
	@JoinColumn(name = "guestbook_id")
	public GuestbookExt getExt() {
		return ext;
	}

	public void setExt(GuestbookExt ext) {
		this.ext = ext;
	}

	@OneToMany(targetEntity=GuestbookAttr.class, cascade=CascadeType.ALL, fetch = FetchType.LAZY,mappedBy="guestbook")  
	public List<GuestbookAttr> getAttachments() {
		return attachments;
	}

	public void setAttachments(List<GuestbookAttr> attachments) {
		this.attachments = attachments;
	}
	
	@OneToMany(targetEntity=GuestbookReason.class, cascade=CascadeType.ALL, fetch = FetchType.LAZY,mappedBy="guestbook")  
	@OrderBy("create_time DESC")
	public List<GuestbookReason> getReason() {
		return reason;
	}
	
	public void setReason(List<GuestbookReason> reason) {
		this.reason = reason;
	}

	@Column(name = "status", length = 11)
	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "peopleCount", length = 11)
	public Integer getPeopleCount() {
		return peopleCount;
	}

	public void setPeopleCount(Integer peopleCount) {
		this.peopleCount = peopleCount;
	}

	@Column(name = "leader", length = 255)
	public String getLeader() {
		return leader;
	}

	public void setLeader(String leader) {
		this.leader = leader;
	}

	@Column(name = "receptionist", length = 255)
	public String getReceptionist() {
		return receptionist;
	}

	public void setReceptionist(String receptionist) {
		this.receptionist = receptionist;
	}

	@Column(name = "appeals")
	public String getAppeals() {
		return appeals;
	}

	public void setAppeals(String appeals) {
		this.appeals = appeals;
	}

	@Column(name = "preliminaryOpinion")
	public String getPreliminaryOpinion() {
		return preliminaryOpinion;
	}

	public void setPreliminaryOpinion(String preliminaryOpinion) {
		this.preliminaryOpinion = preliminaryOpinion;
	}

	@Column(name = "satisfied")
	public Boolean getSatisfied() {
		return satisfied;
	}

	public void setSatisfied(Boolean satisfied) {
		this.satisfied = satisfied;
	}
	
	@Column(name = "end_time")
	public Date getEndTime() {
		return endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "complete_time")
	public Date getCompleteTime() {
		return completeTime;
	}

	public void setCompleteTime(Date completeTime) {
		this.completeTime = completeTime;
	}

}
